{% extends 'base_admin.html.twig' %}
{% import 'macros/category.html.twig' as categoryMacros %}

{% block title %}{{ 'client_price.bulk_edit_for'|trans }} {{ client.companyName }} - B2B Shop{% endblock %}

{% block body %}
    <div class="container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>{{ 'client_price.bulk_edit_for'|trans }} {{ client.companyName }}</h1>
            <a href="{{ path('client_price_index', {'client': client.id}) }}" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> {{ 'client_price.back_to_client_prices'|trans }}
            </a>
        </div>

        <div class="card mb-3">
            <div class="card-body">
                <form method="get" class="row g-3">
                    <div class="col-md-3">
                        <label for="search" class="form-label">{{ 'client_price.search_products'|trans }}</label>
                        <input type="text"
                               class="form-control"
                               id="search"
                               name="search"
                               value="{{ currentSearch }}"
                               placeholder="{{ 'client_price.search_by_name'|trans }}">
                    </div>
                    <div class="col-md-4">
                        <label for="category" class="form-label">{{ 'client_price.category'|trans }}</label>
                        <select class="form-select" id="category" name="category">
                            <option value="0">{{ 'client_price.all_categories'|trans }}</option>
                            {{ categoryMacros.renderCategoryOptions(categories, currentCategory) }}
                        </select>
                    </div>
                    <div class="col-md-2 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary btn-sm w-20 py-1 px-2">
                            <i class="bi bi-search"></i> {{ 'client_price.filter'|trans }}
                        </button>

                        <a href="{{ path('client_price_bulk_edit_for_client', {'id': client.id}) }}" class="btn btn-outline-secondary btn w-20 py-1 px-2">
                            <i class="bi bi-arrow-counterclockwise"></i> {{ 'client_price.reset'|trans }}
                        </a>
                    </div>
                </form>
            </div>
        </div>

        <div class="card">
            <div class="card-header bg-light">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">{{ 'client_price.product_prices'|trans }}</h5>
                    <span class="badge bg-primary">{{ pagination.totalItemCount }} {{ 'client_price.products'|trans }}</span>
                </div>
            </div>
            <div class="card-body">
                <form method="post" id="bulk-edit-form">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th style="width: 5%">#</th>
                                    <th style="width: 30%">{{ 'client_price.product'|trans }}</th>
                                    <th style="width: 15%">{{ 'client_price.base_price'|trans }}</th>
                                    <th style="width: 20%">{{ 'client_price.client_price'|trans }}</th>
                                    <th style="width: 15%">{{ 'client_price.discount'|trans }}</th>
                                    <th style="width: 15%">{{ 'client_price.status'|trans }}</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for product in pagination.items %}
                                    {% set hasPrice = priceMap[product.id] is defined %}
                                    {% set price = hasPrice ? priceMap[product.id].price : product.basePrice %}
                                    {% set isActive = hasPrice ? priceMap[product.id].isActive : false %}
                                    {% set isDiscount = price < product.basePrice %}
                                    {% set isIncrease = price > product.basePrice %}
                                    {% set percentValue = isDiscount
                                        ? ((1 - price / product.basePrice) * 100)|round
                                        : (isIncrease ? ((price / product.basePrice - 1) * 100)|round : 0) %}

                                    <tr>
                                        <td>{{ product.id }}</td>
                                        <td>{{ product.name }}</td>
                                        <td>{{ product.basePrice }}{{ currency() }}</td>
                                        <td>
                                            <div class="input-group">
                                                <input type="number"
                                                       name="prices[{{ product.id }}]"
                                                       class="form-control price-input"
                                                       value="{{ price }}"
                                                       step="0.01"
                                                       min="0"
                                                       data-base-price="{{ product.basePrice }}"
                                                       data-product-id="{{ product.id }}">
                                                <span class="input-group-text">{{ currency() }}</span>
                                            </div>
                                        </td>
                                        <td>
                                            <span id="discount-{{ product.id }}" class="{{ isDiscount ? 'text-success' : (isIncrease ? 'text-danger' : '') }}">
                                                {{ isDiscount ? percentValue ~ '%' : (isIncrease ? '+' ~ percentValue ~ '%' : '0%') }}
                                            </span>
                                        </td>
                                        <td>
                                            <div class="form-check form-switch">
                                                <input class="form-check-input"
                                                       type="checkbox"
                                                       name="active[{{ product.id }}]"
                                                       id="active-{{ product.id }}"
                                                       {{ isActive ? 'checked' : '' }}>
                                                <label class="form-check-label" for="active-{{ product.id }}">
                                                    {{ 'client_price.active'|trans }}
                                                </label>
                                            </div>
                                        </td>
                                    </tr>
                                {% else %}
                                    <tr>
                                        <td colspan="6" class="text-center">{{ 'client_price.no_products_available'|trans }}</td>
                                    </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>

                    <div class="d-flex justify-content-center my-3">
                        {{ knp_pagination_render(pagination) }}
                    </div>

                    <div class="d-flex justify-content-between mt-4">
                        <div class="btn-group">
                            <button type="button" class="btn btn-outline-secondary" id="apply-discount-btn">
                                <i class="bi bi-percent"></i> {{ 'client_price.apply_discount'|trans }}
                            </button>
                            <button type="button" class="btn btn-outline-secondary" id="reset-prices-btn">
                                <i class="bi bi-arrow-counterclockwise"></i> {{ 'client_price.reset_to_base_prices'|trans }}
                            </button>
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-save"></i> {{ 'client_price.save_all_prices'|trans }}
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Apply discount button
            document.getElementById('apply-discount-btn').addEventListener('click', function() {
                const discountPercent = prompt('{{ 'client_price.enter_discount_percentage'|trans }}', '10');
                if (discountPercent !== null && !isNaN(discountPercent)) {
                    const discount = parseFloat(discountPercent) / 100;

                    document.querySelectorAll('.price-input').forEach(input => {
                        const basePrice = parseFloat(input.dataset.basePrice);
                        const newPrice = (basePrice * (1 - discount)).toFixed(2);
                        input.value = newPrice;

                        // Update discount display
                        const productId = input.dataset.productId;
                        const discountElement = document.getElementById('discount-' + productId);
                        discountElement.textContent = discountPercent + '%';
                        discountElement.className = 'text-success';
                    });
                }
            });

            // Reset to base prices
            document.getElementById('reset-prices-btn').addEventListener('click', function() {
                if (confirm('{{ 'client_price.reset_all_prices_confirm'|trans }}')) {
                    document.querySelectorAll('.price-input').forEach(input => {
                        const basePrice = parseFloat(input.dataset.basePrice);
                        input.value = basePrice.toFixed(2);

                        // Update discount display
                        const productId = input.dataset.productId;
                        const discountElement = document.getElementById('discount-' + productId);
                        discountElement.textContent = '0%';
                        discountElement.className = '';
                    });
                }
            });

            // Update discount when price changes
            document.querySelectorAll('.price-input').forEach(input => {
                input.addEventListener('change', function() {
                    const basePrice = parseFloat(this.dataset.basePrice);
                    const newPrice = parseFloat(this.value);
                    const productId = this.dataset.productId;
                    const discountElement = document.getElementById('discount-' + productId);

                    if (newPrice < basePrice) {
                        const discount = Math.round((1 - newPrice / basePrice) * 100);
                        discountElement.textContent = discount + '%';
                        discountElement.className = 'text-success';
                    } else if (newPrice > basePrice) {
                        const increase = Math.round((newPrice / basePrice - 1) * 100);
                        discountElement.textContent = '+' + increase + '%';
                        discountElement.className = 'text-danger';
                    } else {
                        discountElement.textContent = '0%';
                        discountElement.className = '';
                    }
                });
            });
        });
    </script>
{% endblock %}
