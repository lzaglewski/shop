{% extends 'base.html.twig' %}

{% block title %}{{ 'navigation.products'|trans }} - B2B Shop{% endblock %}

{% block body %}
    <div class="container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>{{ 'navigation.products'|trans }}</h1>
            {% if is_granted('ROLE_ADMIN') %}
                <a href="{{ path('product_new') }}" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> {{ 'product.add_new'|trans }}
                </a>
            {% endif %}
        </div>

        <div class="row mb-4">
            <div class="row mb-4">
                <div class="col-md-12 d-flex justify-content-center">
                    {{ knp_pagination_render(products) }}
                </div>
            </div>
            <div class="col-md-3">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">{{ 'product.filter_products'|trans }}</h5>
                    </div>
                    <div class="card-body">
                        <form method="get">
                            <div class="mb-3">
                                <label for="category" class="form-label">{{ 'common.category'|trans }}</label>
                                <select name="category" id="category" class="form-select">
                                    <option value="">{{ 'product.all_categories'|trans }}</option>

                                    {# First, find all root categories #}
                                    {% set rootCategories = [] %}
                                    {% for category in categories %}
                                        {% if category.parent is null %}
                                            {% set rootCategories = rootCategories|merge([category]) %}
                                        {% endif %}
                                    {% endfor %}

                                    {# Group options by root category #}
                                    {% for rootCategory in rootCategories %}
                                        <optgroup label="{{ rootCategory.name }}">
                                            <option value="{{ rootCategory.id }}" {% if app.request.query.get('category') == rootCategory.id ~ '' %}selected{% endif %}>
                                                {{ rootCategory.name }}
                                            </option>

                                            {# Render subcategories recursively #}
                                            {% macro renderSubcategories(category, level, selectedCategory, allCategories) %}
                                                {% for subcategory in allCategories %}
                                                    {% if subcategory.parent and subcategory.parent.id == category.id %}
                                                        <option value="{{ subcategory.id }}" {% if selectedCategory == subcategory.id ~ '' %}selected{% endif %}>
                                                            {% set prefix = '' %}
                                                            {% for i in 1..level %}
                                                                {% set prefix = prefix ~ '— ' %}
                                                            {% endfor %}
                                                            {{ prefix }}{{ subcategory.name }}
                                                        </option>
                                                        {{ _self.renderSubcategories(subcategory, level + 1, selectedCategory, allCategories) }}
                                                    {% endif %}
                                                {% endfor %}
                                            {% endmacro %}

                                            {{ _self.renderSubcategories(rootCategory, 1, app.request.query.get('category'), categories) }}
                                        </optgroup>
                                    {% endfor %}
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="search" class="form-label">{{ 'product.search'|trans }}</label>
                                <input type="text" name="search" id="search" class="form-control" value="{{ app.request.query.get('search') }}">
                            </div>
                            <button type="submit" class="btn btn-primary w-100">{{ 'product.apply_filters'|trans }}</button>
                        </form>
                    </div>
                </div>
            </div>
            <div class="col-md-9">
                <div class="row row-cols-1 row-cols-md-3 g-4">
                    {% for product in products %}
                        <div class="col">
                            <div class="card position-relative p-4 border rounded-3 h-100" style="cursor: pointer;" onclick="window.location.href='{{ path('product_show', {'id': product.id}) }}'">
                                {% if product.imageFilename %}
                                    <div class="product-image-container" style="height: 240px; overflow: hidden; display: flex; align-items: center; justify-content: center;">
                                        <img src="{{ asset('uploads/products/' ~ product.imageFilename) }}"
                                             class="img-fluid shadow-sm" alt="{{ product.name }}" style="max-height: 100%; width: auto; object-fit: contain;">
                                    </div>
                                {% else %}
                                    <div class="product-image-container text-center" style="height: 200px; display: flex; align-items: center; justify-content: center;">
                                        <i class="bi bi-image text-secondary" style="font-size: 3rem;"></i>
                                    </div>
                                {% endif %}
                                <h6 class="mt-4 mb-0 fw-bold">{{ product.name }}</h6>
                                <div class="review-content d-flex">
                                </div>
                                <span class="price text-primary fw-bold mb-2 fs-5">
                                    {% if clientPrices[product.id] is defined %}
                                        {{ clientPrices[product.id] }}€
                                    {% else %}
                                        {{ product.basePrice }}€
                                    {% endif %}
                                </span>
                                <div class="card-concern position-absolute start-0 end-0 d-flex gap-2">
                                    {% if is_granted('ROLE_CLIENT') %}
                                        <button type="button" class="btn btn-dark add-to-cart-btn"
                                                data-product-id="{{ product.id }}" onclick="event.stopPropagation();"
                                                data-bs-toggle="tooltip" data-bs-placement="top"
                                                data-bs-title="{{ 'buttons.add_to_cart'|trans }}"
                                                style="width: 63px; height: 63px; border-radius: 50%; display: flex; align-items: center; justify-content: center;">
                                            <svg class="cart">
                                                <use xlink:href="#cart"></use>
                                            </svg>
                                        </button>
                                    {% endif %}
                                    {% if is_granted('ROLE_ADMIN') %}
                                        <a href="{{ path('product_edit', {'id': product.id}) }}"
                                           class="btn btn-dark" onclick="event.stopPropagation();"
                                           data-bs-toggle="tooltip" data-bs-placement="top"
                                           data-bs-title="{{ 'buttons.edit'|trans }}"
                                           style="width: 63px; height: 63px; border-radius: 50%; display: flex; align-items: center; justify-content: center;">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a href="{{ path('client_price_bulk_edit_for_product', {'id': product.id}) }}"
                                           class="btn btn-dark" onclick="event.stopPropagation();"
                                           data-bs-toggle="tooltip" data-bs-placement="top"
                                           data-bs-title="{{ 'product.prices'|trans }}"
                                           style="width: 63px; height: 63px; border-radius: 50%; display: flex; align-items: center; justify-content: center;">
                                            <i class="bi bi-tags"></i>
                                        </a>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    {% else %}
                        <div class="col-12">
                            <div class="alert alert-info">
                                {{ 'product.no_products_found'|trans }} {% if app.request.query.count > 0 %}{{ 'product.try_changing_filters'|trans }}{% endif %}
                            </div>
                        </div>
                    {% endfor %}
                </div>

                <div class="navigation d-flex justify-content-center mt-4">
                    {{ knp_pagination_render(products) }}
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        // Translations for JavaScript
        const translations = {
            productAdded: '{{ 'cart.product_added_successfully'|trans }}',
            addedButton: '{{ 'cart.added'|trans }}',
            errorButton: '{{ 'cart.error'|trans }}',
            errorAddingProduct: '{{ 'cart.error_adding_product_to_cart'|trans }}'
        };

        document.addEventListener('DOMContentLoaded', function() {
            const addToCartButtons = document.querySelectorAll('.add-to-cart-btn');

            addToCartButtons.forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();

                    const productId = this.getAttribute('data-product-id');
                    const originalText = this.innerHTML;

                    // Disable button and show loading state
                    this.disabled = true;
                    this.innerHTML = '<i class="bi bi-hourglass"></i> Dodawanie...';

                    fetch('/cart/ajax-add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                        },
                        body: `product_id=${productId}&quantity=1`
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Show success state
                            this.innerHTML = `<i class="bi bi-check"></i> ${translations.addedButton}`;
                            this.classList.remove('btn-success');
                            this.classList.add('btn-outline-success');

                            // Show success message
                            showMessage(data.message || translations.productAdded, 'success');

                            // Update cart counter in navbar if exists
                            const cartCounter = document.querySelector('.cart-count');
                            if (cartCounter && data.itemCount) {
                                cartCounter.textContent = data.itemCount;
                            }

                            // Reset button after 2 seconds
                            setTimeout(() => {
                                this.innerHTML = originalText;
                                this.classList.remove('btn-outline-success');
                                this.classList.add('btn-success');
                                this.disabled = false;
                            }, 2000);
                        } else {
                            // Show error state
                            this.innerHTML = `<i class="bi bi-x"></i> ${translations.errorButton}`;
                            this.classList.remove('btn-success');
                            this.classList.add('btn-danger');

                            showMessage(data.message || translations.errorAddingProduct, 'danger');

                            // Reset button after 2 seconds
                            setTimeout(() => {
                                this.innerHTML = originalText;
                                this.classList.remove('btn-danger');
                                this.classList.add('btn-success');
                                this.disabled = false;
                            }, 2000);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);

                        // Show error state
                        this.innerHTML = '<i class="bi bi-x"></i> Błąd';
                        this.classList.remove('btn-success');
                        this.classList.add('btn-danger');

                        showMessage(translations.errorAddingProduct, 'danger');

                        // Reset button after 2 seconds
                        setTimeout(() => {
                            this.innerHTML = originalText;
                            this.classList.remove('btn-danger');
                            this.classList.add('btn-success');
                            this.disabled = false;
                        }, 2000);
                    });
                });
            });

        });
    </script>
{% endblock %}
